[{"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/App.js":"1","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/reportWebVitals.js":"2","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/SearchAppBar.js":"3","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/Pakistan.js":"4","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/RadioButtons.js":"5","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/DisplayPanel.js":"6","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/Global.js":"7","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/UnitedStates.js":"8","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/reportWebVitals.js":"9","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/components/DisplayPanel.js":"10","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/components/Global.js":"11","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/components/SearchAppBar.js":"12","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/App.js":"13","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/components/SimpleSelect.js":"14","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/components/GlobalMap.js":"15","/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/index.js":"16"},{"size":460,"mtime":1608904515092,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1608845483136,"results":"19","hashOfConfig":"20"},{"size":2496,"mtime":1608894596748,"results":"21","hashOfConfig":"18"},{"size":2384,"mtime":1608905079328,"results":"22","hashOfConfig":"18"},{"size":1433,"mtime":1608899363092,"results":"23","hashOfConfig":"20"},{"size":419,"mtime":1608904410740,"results":"24","hashOfConfig":"20"},{"size":3001,"mtime":1608904271192,"results":"25","hashOfConfig":"20"},{"size":2408,"mtime":1608905168640,"results":"26","hashOfConfig":"20"},{"size":362,"mtime":1608845483136,"results":"27","hashOfConfig":"28"},{"size":419,"mtime":1608904410740,"results":"29","hashOfConfig":"28"},{"size":7411,"mtime":1609063825335,"results":"30","hashOfConfig":"28"},{"size":1159,"mtime":1609212221655,"results":"31","hashOfConfig":"28"},{"size":877,"mtime":1609067567641,"results":"32","hashOfConfig":"28"},{"size":1952,"mtime":1608986647726,"results":"33","hashOfConfig":"28"},{"size":8406,"mtime":1609077199559,"results":"34","hashOfConfig":"28"},{"size":500,"mtime":1608845483136,"results":"35","hashOfConfig":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l6odui",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"xy4ien",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"7s3wl1",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/App.js",[],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/reportWebVitals.js",[],["73","74"],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/SearchAppBar.js",[],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/Pakistan.js",[],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/RadioButtons.js",["75"],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/DisplayPanel.js",[],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/Global.js",[],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-01/src/components/UnitedStates.js",[],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/reportWebVitals.js",[],["76","77"],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/components/DisplayPanel.js",[],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/components/Global.js",["78"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 900,\n        marginTop: 20,\n        marginLeft: 60,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        /* textTransform: 'upperCase', */\n        transition: 'transform .3s',\n        \"&:hover\": {\n            transform: 'scale(1.2)',\n            cursor: 'text'\n        }\n    },\n    title: {\n        fontSize: '20px',\n        fontWeight: '70px',\n        color: '#9c27b0',\n    },\n    loading: {\n        fontSize: '40px',\n        color: '#c62828',\n        marginLeft: '200px',\n        marginTop: '50px',\n    }\n}));\n\nfunction Global({ selectValue, countryList, countryIndex }) {\n    // console.log(selectValue[0]);\n\n    let [globalData, setGlobalData] = useState({});\n    let [isFetching, setFetching] = useState(true);\n\n    useEffect(() => {\n        async function getData() {\n            setFetching(true);\n            const apiResponse = await fetch('https://api.covid19api.com/summary');\n            const dataFromAPI = await apiResponse.json();\n            // console.log(dataFromAPI);\n            gatherCountries(dataFromAPI, selectValue);\n\n            setGlobalData(dataFromAPI);\n            setFetching(false);\n        }\n        getData();\n    }, []);\n\n    function gatherCountries(dataFromAPI, selectValue) {\n        var list = []\n        for (var i = 0; i < 192; i++) {\n            list.push(dataFromAPI.Countries[i].Country);\n        }\n        // console.log(list);\n        countryList[1](list);\n    }\n\n    // console.log(globalData);\n    const classes = useStyles();\n\n    if (isFetching === true) {\n        return (\n            <div className={classes.loading}>\n                <CircularProgress\n                    color=\"secondary\"\n                    size={32}\n                    thickness={2}\n                /><span style={{ fontSize: 35 }}>   Loading Data ...</span>\n            </div>\n        )\n    }\n    else if (selectValue[0] === \"Global\") {\n        return (\n            <div className={classes.root}>\n                <Typography variant=\"h3\" style={{ color: '#8e24aa', fontWeight: 'bold' }}>\n                    Global\n                </Typography><br />\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={4}>\n                        <Paper\n                            className={classes.paper}\n                            elevation={5}>\n                            <Typography variant=\"h3\" color=\"textSecondary\" style={{ fontWeight: 500 }}>\n                                {globalData && globalData.Global && globalData.Global.TotalConfirmed.toLocaleString()}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" color=\"inherit\">\n                                Total Confirmed Cases\n                                </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Paper\n                            className={classes.paper}\n                            elevation={5}>\n                            <Typography variant=\"h3\" style={{ color: \"darkGreen\", fontWeight: 500 }}>\n                                {globalData && globalData.Global && globalData.Global.TotalRecovered.toLocaleString()}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" style={{ color: \"darkGreen\" }}>\n                                Total Recovered\n                                </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Paper\n                            className={classes.paper}\n                            elevation={5}>\n                            {/* We make sure that there must be a globalData and globalData.Global */}\n                            <Typography variant=\"h3\" color=\"error\" style={{ fontWeight: 500 }}>\n                                {globalData && globalData.Global && globalData.Global.TotalDeaths.toLocaleString()}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" color=\"error\">\n                                Total Deaths\n                                </Typography>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n    else {\n        return (\n            <div className={classes.root}>\n                <Typography variant=\"h3\" style={{ color: '#8e24aa', fontWeight: 'bold' }}>\n                    {selectValue[0].toUpperCase()}\n                </Typography><br />\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={4}>\n                        <Paper\n                            className={classes.paper}\n                            elevation={5}>\n                            <Typography variant=\"h3\" color=\"textSecondary\" style={{ fontWeight: 500 }}>\n                                {globalData && globalData.Countries && globalData.Countries[countryIndex[0]].TotalConfirmed.toLocaleString()}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" color=\"inherit\">\n                                Total Confirmed Cases\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Paper\n                            className={classes.paper}\n                            elevation={5}>\n                            <Typography variant=\"h3\" style={{ color: \"darkGreen\", fontWeight: 500 }}>\n                                {globalData && globalData.Countries && globalData.Countries[countryIndex[0]].TotalRecovered.toLocaleString()}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" style={{ color: \"darkGreen\" }}>\n                                Total Recovered\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Paper\n                            className={classes.paper}\n                            elevation={5}>\n                            {/* We make sure that there must be a globalData and globalData.Global */}\n                            <Typography variant=\"h3\" color=\"error\" style={{ fontWeight: 500 }}>\n                                {globalData && globalData.Countries && globalData.Countries[countryIndex[0]].TotalDeaths.toLocaleString()}\n                            </Typography>\n                            <Typography variant=\"subtitle1\" color=\"error\">\n                                Total Deaths\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\nexport default Global;\n\n/*\nFontWeight in React:::\nhttps://reactnative.dev/docs/text-style-props\n*/",["79","80"],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/components/SearchAppBar.js",[],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/App.js",[],["81","82"],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/components/SimpleSelect.js",[],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/components/GlobalMap.js",["83","84","85"],"/home/asad/Cloud-Computing/BootCamp2020/Class10-Covid19-Tracker/example-02/src/index.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":56,"column":8,"nodeType":"98","endLine":56,"endColumn":10,"suggestions":"99"},{"ruleId":"86","replacedBy":"100"},{"ruleId":"88","replacedBy":"101"},{"ruleId":"86","replacedBy":"102"},{"ruleId":"88","replacedBy":"103"},{"ruleId":"96","severity":1,"message":"104","line":18,"column":8,"nodeType":"98","endLine":18,"endColumn":24,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"106","line":18,"column":9,"nodeType":"107","endLine":18,"endColumn":23},{"ruleId":"108","severity":1,"message":"109","line":27,"column":44,"nodeType":"110","messageId":"111","endLine":27,"endColumn":46},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["112"],["113"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'gatherCountries' and 'selectValue'. Either include them or remove the dependency array.","ArrayExpression",["114"],["112"],["113"],["112"],["113"],"React Hook useEffect has a missing dependency: 'gatherData'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [gatherCountries, selectValue]",{"range":"120","text":"121"},"Update the dependencies array to be: [gatherData]",{"range":"122","text":"123"},[1626,1628],"[gatherCountries, selectValue]",[637,653],"[gatherData]"]